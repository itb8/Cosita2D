//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Controles.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controles: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controles()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controles"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""10096532-632f-4331-9ff1-4c11050aec8f"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""e24a0d3e-d032-4b48-a762-3ba07aaaf2a6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCrab"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d5642246-4571-40ca-bf9b-2bdad36dac6c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpCrab"",
                    ""type"": ""Button"",
                    ""id"": ""cc278455-3191-47e8-ae45-bd17b0c80273"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpOctopus"",
                    ""type"": ""Button"",
                    ""id"": ""452857bd-36b4-4ab8-ae91-75eaca017578"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveOctopus"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7468cecd-d2d6-4c77-b463-e82abafa5c55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e54c21c8-0892-4de9-ba92-5c3a5af8c673"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCrab"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2b8f5537-990e-4b2d-954f-bbd72840a9ab"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""61ad72d2-130f-465a-b9e8-5b84819c50c2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0abad2f7-6797-4799-83d7-d5d0431d550e"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""700d755f-7c16-45a0-8caa-d162d27bf6ad"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpOctopus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c7863b0-5a2e-414b-8382-0c1c35ee9be1"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpOctopus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0e738c57-59c0-4455-a78c-a45c2250118a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveOctopus"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8cc186b9-8ee9-4afe-88e7-fb4112f8c6c9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveOctopus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bd625f72-c465-49d8-a954-d982490947be"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveOctopus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bc99d972-b4a5-4a90-bf0b-7e7049fe5ee8"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveOctopus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d288edf-e9ac-4a85-b39c-2cab94f9f4b2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b70be7f-c404-40f6-8a11-c687700880f2"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c96e8eb0-4509-449f-b14c-7c06c32be21a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpCrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c389db0a-4f39-4ec0-8402-bc4c7794bbb9"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpCrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Interact = m_Character.FindAction("Interact", throwIfNotFound: true);
        m_Character_MoveCrab = m_Character.FindAction("MoveCrab", throwIfNotFound: true);
        m_Character_JumpCrab = m_Character.FindAction("JumpCrab", throwIfNotFound: true);
        m_Character_JumpOctopus = m_Character.FindAction("JumpOctopus", throwIfNotFound: true);
        m_Character_MoveOctopus = m_Character.FindAction("MoveOctopus", throwIfNotFound: true);
    }

    ~@Controles()
    {
        UnityEngine.Debug.Assert(!m_Character.enabled, "This will cause a leak and performance issues, Controles.Character.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private List<ICharacterActions> m_CharacterActionsCallbackInterfaces = new List<ICharacterActions>();
    private readonly InputAction m_Character_Interact;
    private readonly InputAction m_Character_MoveCrab;
    private readonly InputAction m_Character_JumpCrab;
    private readonly InputAction m_Character_JumpOctopus;
    private readonly InputAction m_Character_MoveOctopus;
    public struct CharacterActions
    {
        private @Controles m_Wrapper;
        public CharacterActions(@Controles wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Character_Interact;
        public InputAction @MoveCrab => m_Wrapper.m_Character_MoveCrab;
        public InputAction @JumpCrab => m_Wrapper.m_Character_JumpCrab;
        public InputAction @JumpOctopus => m_Wrapper.m_Character_JumpOctopus;
        public InputAction @MoveOctopus => m_Wrapper.m_Character_MoveOctopus;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Add(instance);
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @MoveCrab.started += instance.OnMoveCrab;
            @MoveCrab.performed += instance.OnMoveCrab;
            @MoveCrab.canceled += instance.OnMoveCrab;
            @JumpCrab.started += instance.OnJumpCrab;
            @JumpCrab.performed += instance.OnJumpCrab;
            @JumpCrab.canceled += instance.OnJumpCrab;
            @JumpOctopus.started += instance.OnJumpOctopus;
            @JumpOctopus.performed += instance.OnJumpOctopus;
            @JumpOctopus.canceled += instance.OnJumpOctopus;
            @MoveOctopus.started += instance.OnMoveOctopus;
            @MoveOctopus.performed += instance.OnMoveOctopus;
            @MoveOctopus.canceled += instance.OnMoveOctopus;
        }

        private void UnregisterCallbacks(ICharacterActions instance)
        {
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @MoveCrab.started -= instance.OnMoveCrab;
            @MoveCrab.performed -= instance.OnMoveCrab;
            @MoveCrab.canceled -= instance.OnMoveCrab;
            @JumpCrab.started -= instance.OnJumpCrab;
            @JumpCrab.performed -= instance.OnJumpCrab;
            @JumpCrab.canceled -= instance.OnJumpCrab;
            @JumpOctopus.started -= instance.OnJumpOctopus;
            @JumpOctopus.performed -= instance.OnJumpOctopus;
            @JumpOctopus.canceled -= instance.OnJumpOctopus;
            @MoveOctopus.started -= instance.OnMoveOctopus;
            @MoveOctopus.performed -= instance.OnMoveOctopus;
            @MoveOctopus.canceled -= instance.OnMoveOctopus;
        }

        public void RemoveCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActions @Character => new CharacterActions(this);
    public interface ICharacterActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnMoveCrab(InputAction.CallbackContext context);
        void OnJumpCrab(InputAction.CallbackContext context);
        void OnJumpOctopus(InputAction.CallbackContext context);
        void OnMoveOctopus(InputAction.CallbackContext context);
    }
}
